language: python

before_install:

  - pip install awscli
  - sudo apt-get install jq -y
  - chmod +x create_route53_alias.sh
  - chmod +x create_alb_listener_rules.sh
  - chmod +x create_task_definitions.sh
  - chmod +x create_ecs_service.sh
  - chmod +x create_alb_target_group.sh
  - chmod +x destroy_resources.sh
  - export deletion_mark=1

jobs:

  include:

  - stage: build and push application docker image to aws ecr

    script:

      - echo `aws --version`

      - echo Logging in to Amazon ECR...

      - eval $(aws ecr get-login --no-include-email)

      - echo Entered the build phase...

      - docker build -t $python_NAME:$TRAVIS_BRANCH . --target app-python

      - echo Tag and Push the docker images to aws ecr...

      - docker tag $python_NAME:$TRAVIS_BRANCH $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$python_NAME:$TRAVIS_BRANCH

      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$python_NAME:$TRAVIS_BRANCH

      - docker build -t $redis_NAME:$TRAVIS_BRANCH . --target app-redis

      - docker tag $redis_NAME:$TRAVIS_BRANCH $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$redis_NAME:$TRAVIS_BRANCH

      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$redis_NAME:$TRAVIS_BRANCH

  
  - stage: Deploy Application to AWS ...

    script:

      - echo 1. Creating AWS ALB target group ...
             2. Creating AWS ECS Task definitions ...
             3. Creating AWS ALB listener rules ...
             4. Creating AWS ECS Service ...
             5. Creating AWS ALB Route53 Alias A record ...
             6. Destroy AWS resources if deletion_mark=1 ...


      - ./create_alb_target_group.sh

      - ./create_task_definitions.sh

      - ./create_alb_listener_rules.sh

      - ./create_ecs_service.sh

      - ./create_route53_alias.sh

      - ./destroy_resources.sh





notifications:

  slack:

    on_pull_requests: true

    rooms:
     - juwai:fbVrH3u9xkfC95YsIFFsCcbO

    on_success: always # default: always

    on_failure: always # default: always
